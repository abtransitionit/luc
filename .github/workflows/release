# create a release after artifact are built
name: Release

on:
  workflow_run: # This workflow is triggered when the workflow completes (success or failure). 
    workflows:
      - Build   # the name of the workflow (inside the yaml)
    types:
      - completed

jobs:
  create-release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}  # build is on success
    runs-on: ubuntu-latest     # the VM
    steps:    

      - name: checkout the current git repo # with tags in it
        uses: actions/checkout@v4
        with:
          fetch-depth: 0    # Fetch all history (required for tags)
          fetch-tags: true  # Explicit fetch tags

      - name: Get the latest TAG # that normally triggered this workflow
        id: get_tag
        run: |
          echo "TAG_NAME=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: save the tag ${{ env.TAG_NAME }} in a file
        run: |
          echo "${{ env.TAG_NAME }}" > tag.txt

      - name: upload file as artifact # for sharing with another job in the same workflow
        uses: actions/upload-artifact@v4
        with:
          name: release-tag
          path: tag.txt

      - name: Get the workflow (instance) info that trigger this workflow (instance)
        id: get_wf_instance_info
        env:
          WORKFLOW_ID:          ${{ github.event.workflow_run.workflow_id }}
          WORKFLOW_INSTANCE_ID: ${{ github.event.workflow_run.id }}
        run: |
          echo "WORKFLOW_ID=${WORKFLOW_ID}"                   >> $GITHUB_OUTPUT
          echo "WORKFLOW_INSTANCE_ID=${WORKFLOW_INSTANCE_ID}" >> $GITHUB_OUTPUT 

      - name: download artifact into a folder
        env:
            GH_TOKEN:     ${{ github.token }}      
            FOLDER_PATH:  ${{ steps.get_wf_instance_info.outputs.WORKFLOW_INSTANCE_ID }}
        run: gh run download ${{ steps.get_wf_instance_info.outputs.WORKFLOW_INSTANCE_ID }} --dir ${{ env.FOLDER_PATH }}

      - name: show downloaded artifacts
        run: |
          ls -ialh ${{ steps.get_wf_instance_info.outputs.WORKFLOW_INSTANCE_ID }}
          ls -ialh ${{ steps.get_wf_instance_info.outputs.WORKFLOW_INSTANCE_ID }}/*

      - name: create the release with tag ${{ env.TAG_NAME }} and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v2  # https://github.com/softprops/action-gh-release
        with:
          tag_name: ${{ env.TAG_NAME }}     # tag that triggered the workflow
          files: ${{ steps.get_wf_instance_info.outputs.WORKFLOW_INSTANCE_ID }}/**

  add-release-notes:
    needs: create-release
    if: ${{ github.event.workflow_run.conclusion == 'success' }}  # build is on success
    env:
      RELEASE_NOTE_TPL_PATH: ./.github/release/templates.md
      RELEASE_NOTE_PATH:     ./RELEASE.md
    runs-on: ubuntu-latest     # the VM
    steps:    
      - name: checkout the current git repo # with tags in it
        uses: actions/checkout@v4
        with:
          fetch-depth: 0    # Fetch all history (required for tags)
          fetch-tags: true  # Explicit fetch tags

      - name: download artifact containing the release tag
        uses: actions/download-artifact@v4
        with:
          name: release-tag        

      - name: Put the TAG in environment
        run: |
          echo "TAG_NAME=$(cat tag.txt  | tail -n 1)" >> $GITHUB_ENV

      - name: Prepare release notes dynamically
        run: |
          sed "s|\$TAG_NAME|${TAG_NAME}|g" ${RELEASE_NOTE_TPL_PATH} > ${RELEASE_NOTE_PATH}

      - name: add the release notes - DO NOT CREATE A RELEASE, JUST UPDATE IT 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}     # tag that triggered the workflow
          body_path: ${{ env.RELEASE_NOTE_PATH }}
