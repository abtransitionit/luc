# release a go artifact
# - use a VM image capabilities, no container
name: Release

on:
  workflow_run: # This workflow is triggered when the workflow completes (success or failure). 
    workflows:
      - Tag   # the name of the workflow (inside the yaml)
    types:
      - completed

# on:
#   push:
#     tags:
#       - '*'  # on any new pushed tag (new or force-pushed).

jobs:
  create-release-from-tag:
    env:
      # TAG_PATH: ./tag-${{ github.run_id }}        # local folder 
      TAG_PATH: ./tag        # local folder 
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest     # the VM
    steps:
      - name: download artifact into a local folder from previous workflow
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: tag-name             # must match the uploaded artifact name
          path: ${{ env.TAG_PATH }}  # local folder into extract the file - no concurent conflict

      - name: ls folder
        run: ls -la ${{ env.TAG_PATH }}

      # - name: show hard coded "tag-name" value
      #   run: cat ${{ env.TAG_PATH }}/tag-name

      - name: summary     # allow identification in github UI
        run: |
          echo "Branch:   ${{ github.event.workflow_run.head_branch }}"
          echo "Commit:   ${{ github.event.workflow_run.head_sha }}"
          echo "Tag path: ${{ env.TAG_PATH }}"




# jobs:
#   create-release:
#     if: ${{ github.event.workflow_run.conclusion == 'success' }}
#     runs-on: ubuntu-latest     # the VM
#     env:
#       TAG_NAME: ${{ github.ref_name }}   # Tag that triggered the workflow
#     steps:
#       - name: Create release for tag ${{ env.TAG_NAME }}    
#         run: |
#           echo "Tag that triggered and used for this release : ${{ env.TAG_NAME }}"
#       - name: Create The Release
#         uses: softprops/action-gh-release@v1  # https://github.com/softprops/action-gh-release
#         with:
#           tag_name: ${{ env.TAG_NAME }}    # tag that triggered the workflow
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
