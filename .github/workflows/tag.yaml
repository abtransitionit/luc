# Build a repository TAG
# - use a VM image capabilities, no container
name: Tag

on:
  workflow_run: # This workflow is triggered when the workflow completes (success or failure). 
    workflows:
      - Build   # the name of the workflow (inside the yaml)
    types:
      - completed

jobs:
  create-tag-inside-vm:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    env:                          # variables shared by all steps
      BRANCH_NAME:  ${{ github.event.workflow_run.head_branch }}
      RUN_NUMBER:   ${{ github.event.workflow_run.run_number }}
      TAG_FILENAME: "tag.txt"
    
    steps:
      - name: define var VERSION to v0.0.1 # and put it in the github env (like other env vars) 
        id: tagversion
        run: echo "VERSION=v0.0.1" >> $GITHUB_ENV

      - name: define var TAG_NAME           # and put it in the github env
        id: tagname
        # run: echo "TAG_NAME=${VERSION}-${BRANCH_NAME}-${RUN_NUMBER}" >> $GITHUB_ENV
        run: echo "TAG_NAME=${VERSION}-${BRANCH_NAME}" >> $GITHUB_ENV

      - name: checkout the current git repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0          # fetch full git history - mandatory when using some git commands like `git tag`

      - name: define Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"


      - name: Create/update the tag ${{ env.TAG_NAME }} # no fails if tag already exists
        run: |
          git tag -f "${{ env.TAG_NAME }}"

      - name: Push the tag ${{ env.TAG_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push --force origin "${{ env.TAG_NAME }}"

      - name: Save the tag      # for next workflow in a file 
        run: echo "${{ env.TAG_NAME }}" > ${{ env.TAG_FILENAME }}

      - name: Upload file as artifact section of the workflow instance
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.TAG_FILENAME }}   # the dst artifact name/id - zip the file
          path: ./                        # the src artifact folder

      - name: summary     # allow identification in github UI
        run: |
          echo "Branch:   ${{ github.event.workflow_run.head_branch }}"
          echo "Commit:   ${{ github.event.workflow_run.head_sha }}"
          echo "Tag name: ${{ env.TAG_NAME }}"


      # - name: Create the tag ${{ env.TAG_NAME }} # fails if tag already exists
      #   run: |
      #     git tag "${{ env.TAG_NAME }}"

      # - name: Push the tag ${{ env.TAG_NAME }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     git push origin "${{ env.TAG_NAME }}"


